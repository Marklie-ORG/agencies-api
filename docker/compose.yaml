version: '3.1'

services:
  # app:
  #   build:
  #     context: ..
  #     dockerfile: docker/Dockerfile
  #   restart: always
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_started
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     DATABASE_NAME: "saas"
  #     FACEBOOK_ACCESS_TOKEN: "EAASERizF7PoBOzEHGVpBBzQQvgkGtqGnaPaoAbYk0sKwTPLFDGq9tocxutCk76ZC4ChsLRbblTYpf6K6tqzkGnPUh1zZAAMrmQKZBIZCIU4vyvjs4Np0dXIScnVbNodLZB121G19uN8TYXLR4mFnMcOS8PoHSjMuzeOtBdziW4WwBCaVg6sSa1KOI"
  #     DATABASE_HOST: "db"
  #     DATABASE_PORT: "5432"
  #     DATABASE_USER: "postgres"
  #     DATABASE_PASSWORD: "password"
  #     REDIS_URL: "redis://redis:6379"
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: saas
    ports:
      - "5432:5432"
    volumes:
      - ./initial-docker-run.sql:/docker-entrypoint-initdb.d/initial-docker-run.sql
      - postgres-authservice-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: 'redis:alpine'
    hostname: 'redis'
    ports:
      - '6379:6379'
  adminer:
    image: adminer
    restart: always
    ports:
      - "8090:8080"
volumes:
  postgres-authservice-data: